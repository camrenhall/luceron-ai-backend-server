---
# Communications CRUD Tests - Tavern Format
# Testing client communication endpoints with case dependencies

test_name: Communications - Full CRUD Cycle
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - regression
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Parent Case
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:case"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          parent_case_id: case_id

  - name: Create Communication
    request:
      url: "{api_base_url}/api/communications"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:communication:case_id={parent_case_id}"
    response:
      status_code: 201
      json:
        communication_id: !function "tavern_helpers:validate_uuid"
        case_id: "{parent_case_id}"
        communication_type: "EMAIL"
        direction: "INBOUND"
        created_at: !function "tavern_helpers:validate_timestamp"
      save:
        json:
          created_communication_id: communication_id

  - name: Read Created Communication
    request:
      url: "{api_base_url}/api/communications/{created_communication_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        communication_id: "{created_communication_id}"
        case_id: "{parent_case_id}"
        communication_type: "EMAIL"
        subject: !anystr

  - name: Update Communication Status
    request:
      url: "{api_base_url}/api/communications/{created_communication_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "PROCESSED"
    response:
      status_code: 200
      json:
        communication_id: "{created_communication_id}"
        status: "PROCESSED"
        updated_at: !function "tavern_helpers:validate_timestamp"

  - name: Delete Communication
    request:
      url: "{api_base_url}/api/communications/{created_communication_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Verify Communication Deletion
    request:
      url: "{api_base_url}/api/communications/{created_communication_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 404

  - name: Cleanup Parent Case
    request:
      url: "{api_base_url}/api/cases/{parent_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

---
test_name: Communications - Email Integration Test
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - email
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Case for Email Test
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:case"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          email_test_case_id: case_id

  - name: Create Email Communication
    request:
      url: "{api_base_url}/api/communications"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:communication:case_id={email_test_case_id}:communication_type=EMAIL"
    response:
      status_code: 201
      json:
        communication_id: !function "tavern_helpers:validate_uuid"
        communication_type: "EMAIL"
      save:
        json:
          email_communication_id: communication_id

  - name: Test Email Status Check
    request:
      url: "{api_base_url}/api/communications/{email_communication_id}/status"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        communication_id: "{email_communication_id}"
        status: !anystr

  - name: Cleanup Email Communication
    request:
      url: "{api_base_url}/api/communications/{email_communication_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Cleanup Email Test Case
    request:
      url: "{api_base_url}/api/cases/{email_test_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204