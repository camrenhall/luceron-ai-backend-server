---
# Cases CRUD Tests - Tavern Format
# Comprehensive testing of cases API endpoints

test_name: Cases - Full CRUD Cycle
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - regression
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Case
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data_with_overrides:case"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
        client_name: !anystr
        client_email: !anystr
        status: "OPEN"
        created_at: !function "tavern_helpers:validate_timestamp"
      save:
        json:
          created_case_id: case_id
          original_data: $

  - name: Read Created Case
    request:
      url: "{api_base_url}/api/cases/{created_case_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        case_id: "{created_case_id}"
        client_name: !anystr
        status: "OPEN"

  - name: Update Case Status
    request:
      url: "{api_base_url}/api/cases/{created_case_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "CLOSED"
    response:
      status_code: 200
      json:
        case_id: "{created_case_id}"
        status: "CLOSED"
        updated_at: !function "tavern_helpers:validate_timestamp"

  - name: Verify Update
    request:
      url: "{api_base_url}/api/cases/{created_case_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        case_id: "{created_case_id}"
        status: "CLOSED"

  - name: Delete Case
    request:
      url: "{api_base_url}/api/cases/{created_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Verify Deletion
    request:
      url: "{api_base_url}/api/cases/{created_case_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 404

---
test_name: Cases - List Operation
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - list
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Test Case for List
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data_with_overrides:case"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          test_case_id: case_id

  - name: List Cases
    request:
      url: "{api_base_url}/api/cases"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
      params:
        limit: 10
    response:
      status_code: 200
      json:
        data: !anything

  - name: Cleanup Test Case
    request:
      url: "{api_base_url}/api/cases/{test_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

---
test_name: Cases - Search Operation
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - search
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Searchable Case
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data_with_overrides:case:client_name=TAVERN_SearchTest_Company"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          searchable_case_id: case_id

  - name: Search Cases
    request:
      url: "{api_base_url}/api/cases/search"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        client_name: "SearchTest"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Cleanup Searchable Case
    request:
      url: "{api_base_url}/api/cases/{searchable_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

---
test_name: Cases - Validation Errors
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - validation
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Case with Invalid Data
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        client_name: ""  # Empty name should fail validation
    response:
      status_code: 400
      json:
        error: !anystr