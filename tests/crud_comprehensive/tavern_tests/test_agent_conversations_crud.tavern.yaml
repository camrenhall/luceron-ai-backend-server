---
# Agent Conversations CRUD Tests - Tavern Format
# Testing agent conversation endpoints

test_name: Agent Conversations - Full CRUD Cycle
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - agent
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Agent Conversation
    request:
      url: "{api_base_url}/api/agent/conversations"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_conversation"
    response:
      status_code: 201
      json:
        conversation_id: !function "tavern_helpers:validate_uuid"
        status: "ACTIVE"
        conversation_type: "GENERAL"
        created_at: !function "tavern_helpers:validate_timestamp"
      save:
        json:
          created_conversation_id: conversation_id

  - name: Read Created Conversation
    request:
      url: "{api_base_url}/api/agent/conversations/{created_conversation_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        conversation_id: "{created_conversation_id}"
        status: "ACTIVE"
        conversation_type: "GENERAL"

  - name: Update Conversation Status
    request:
      url: "{api_base_url}/api/agent/conversations/{created_conversation_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "COMPLETED"
    response:
      status_code: 200
      json:
        conversation_id: "{created_conversation_id}"
        status: "COMPLETED"
        updated_at: !function "tavern_helpers:validate_timestamp"

  - name: Delete Conversation
    request:
      url: "{api_base_url}/api/agent/conversations/{created_conversation_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Verify Conversation Deletion
    request:
      url: "{api_base_url}/api/agent/conversations/{created_conversation_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 404

---
test_name: Agent Messages - Full CRUD Cycle
includes:
  - !include tavern_config.yaml
marks:
  - crud
  - agent
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Parent Conversation
    request:
      url: "{api_base_url}/api/agent/conversations"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_conversation"
    response:
      status_code: 201
      json:
        conversation_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          parent_conversation_id: conversation_id

  - name: Create Agent Message
    request:
      url: "{api_base_url}/api/agent/messages"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_message:conversation_id={parent_conversation_id}"
    response:
      status_code: 201
      json:
        message_id: !function "tavern_helpers:validate_uuid"
        conversation_id: "{parent_conversation_id}"
        sender: "USER"
        message_type: "TEXT"
        created_at: !function "tavern_helpers:validate_timestamp"
      save:
        json:
          created_message_id: message_id

  - name: Read Created Message
    request:
      url: "{api_base_url}/api/agent/messages/{created_message_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        message_id: "{created_message_id}"
        conversation_id: "{parent_conversation_id}"
        sender: "USER"
        content: !anystr

  - name: Update Message Content
    request:
      url: "{api_base_url}/api/agent/messages/{created_message_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        content: "Updated message content"
    response:
      status_code: 200
      json:
        message_id: "{created_message_id}"
        content: "Updated message content"
        updated_at: !function "tavern_helpers:validate_timestamp"

  - name: Delete Message
    request:
      url: "{api_base_url}/api/agent/messages/{created_message_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Verify Message Deletion
    request:
      url: "{api_base_url}/api/agent/messages/{created_message_id}"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 404

  - name: Cleanup Parent Conversation
    request:
      url: "{api_base_url}/api/agent/conversations/{parent_conversation_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204