---
# Cross Table Integration Tests - Tavern Format
# Testing workflows that span multiple resources

test_name: Case Document Workflow Integration
includes:
  - !include tavern_config.yaml
marks:
  - integration
  - workflow
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Case for Workflow
    request:
      url: "{api_base_url}/api/cases"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:case"
    response:
      status_code: 201
      json:
        case_id: !function "tavern_helpers:validate_uuid"
        status: "OPEN"
      save:
        json:
          workflow_case_id: case_id

  - name: Upload Document to Case
    request:
      url: "{api_base_url}/api/documents"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:document:case_id={workflow_case_id}"
    response:
      status_code: 201
      json:
        document_id: !function "tavern_helpers:validate_uuid"
        case_id: "{workflow_case_id}"
        is_analyzed: false
      save:
        json:
          workflow_document_id: document_id

  - name: Create Communication for Case
    request:
      url: "{api_base_url}/api/communications"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:communication:case_id={workflow_case_id}"
    response:
      status_code: 201
      json:
        communication_id: !function "tavern_helpers:validate_uuid"
        case_id: "{workflow_case_id}"
      save:
        json:
          workflow_communication_id: communication_id

  - name: Process Document Analysis
    request:
      url: "{api_base_url}/api/documents/{workflow_document_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        is_analyzed: true
    response:
      status_code: 200
      json:
        document_id: "{workflow_document_id}"
        is_analyzed: true

  - name: Update Case Status Based on Analysis
    request:
      url: "{api_base_url}/api/cases/{workflow_case_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "IN_PROGRESS"
    response:
      status_code: 200
      json:
        case_id: "{workflow_case_id}"
        status: "IN_PROGRESS"

  - name: Verify Case-Document Relationship
    request:
      url: "{api_base_url}/api/cases/{workflow_case_id}/documents"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Verify Case-Communication Relationship
    request:
      url: "{api_base_url}/api/cases/{workflow_case_id}/communications"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Complete Workflow - Close Case
    request:
      url: "{api_base_url}/api/cases/{workflow_case_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "CLOSED"
    response:
      status_code: 200
      json:
        case_id: "{workflow_case_id}"
        status: "CLOSED"

  - name: Cleanup - Delete Communication
    request:
      url: "{api_base_url}/api/communications/{workflow_communication_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Cleanup - Delete Document
    request:
      url: "{api_base_url}/api/documents/{workflow_document_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Cleanup - Delete Case
    request:
      url: "{api_base_url}/api/cases/{workflow_case_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

---
test_name: Agent Conversation Message Chain
includes:
  - !include tavern_config.yaml
marks:
  - integration
  - agent
stages:
  - name: Get OAuth Token
    request:
      url: "{api_base_url}/oauth/token"
      method: POST
      headers:
        content-type: application/x-www-form-urlencoded
      data:
        grant_type: client_credentials
        client_id: "{oauth_service_id}"
        client_assertion_type: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion: !function "tavern_helpers:generate_jwt_token"
    response:
      status_code: 200
      json:
        access_token: !anystr
      save:
        json:
          oauth_token: access_token

  - name: Create Conversation for Chain
    request:
      url: "{api_base_url}/api/agent/conversations"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_conversation"
    response:
      status_code: 201
      json:
        conversation_id: !function "tavern_helpers:validate_uuid"
      save:
        json:
          chain_conversation_id: conversation_id

  - name: Send First Message
    request:
      url: "{api_base_url}/api/agent/messages"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_message:conversation_id={chain_conversation_id}:sender=USER:content=Hello, I need help"
    response:
      status_code: 201
      json:
        message_id: !function "tavern_helpers:validate_uuid"
        sender: "USER"
      save:
        json:
          first_message_id: message_id

  - name: Send Agent Response
    request:
      url: "{api_base_url}/api/agent/messages"
      method: POST
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json: !function "tavern_helpers:generate_test_data:agent_message:conversation_id={chain_conversation_id}:sender=AGENT:content=How can I help you today?"
    response:
      status_code: 201
      json:
        message_id: !function "tavern_helpers:validate_uuid"
        sender: "AGENT"
      save:
        json:
          agent_response_id: message_id

  - name: Get Conversation History
    request:
      url: "{api_base_url}/api/agent/conversations/{chain_conversation_id}/messages"
      method: GET
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Complete Conversation
    request:
      url: "{api_base_url}/api/agent/conversations/{chain_conversation_id}"
      method: PUT
      headers:
        authorization: "Bearer {oauth_token}"
        content-type: application/json
      json:
        status: "COMPLETED"
    response:
      status_code: 200
      json:
        conversation_id: "{chain_conversation_id}"
        status: "COMPLETED"

  - name: Cleanup - Delete Second Message
    request:
      url: "{api_base_url}/api/agent/messages/{agent_response_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Cleanup - Delete First Message
    request:
      url: "{api_base_url}/api/agent/messages/{first_message_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204

  - name: Cleanup - Delete Conversation
    request:
      url: "{api_base_url}/api/agent/conversations/{chain_conversation_id}"
      method: DELETE
      headers:
        authorization: "Bearer {oauth_token}"
    response:
      status_code: 204